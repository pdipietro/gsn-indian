<script>
/**
 * A random graph is generated and stored in the "graph" variable, and then sigma is
 * instanciated directly with the graph.
 *
 * The simple instanciation of sigma is enough to make it render the graph
 * on the screen, since the graph is given directly to the constructor.
 */

// graph_data = JSON.parse('<%#= raw [@users.to_json][0] %>')
graph_data = JSON.parse('<%= raw [parsed_data.to_json][0] %>')
var node_ids=[]
<% @check_node.each do |node| %> 
  node_ids.push(<%= node %>)
<% end %>
console.log(node_ids)
sigma.renderers.def = sigma.renderers.canvas
// Instanciate sigma:
s = new sigma({
  graph: graph_data,
  container: 'graph-container'
});

// Initialize the dragNodes plugin:
sigma.plugins.dragNodes(s, s.renderers[0]);

// Bind the events:
s.bind('overNode', function(e) { 
  var attr_node = ""
  var attr_edge = ""
  // console.log(e.data.node)
  // console.log(e.data)
  // console.log(e.data.node.relation)
  $.each(e.data.node.properties.node, function(k, v) {
    attr_node += "<li><span style='color:red; margin-right: 20px;'>"+k+":</span><span>"+v+"</span></li>"
  });  
  // console.log(e.data.node.properties.edge)
   if(e.data.node.properties.edge != undefined) {
     $.each(e.data.node.properties.edge, function(k, v) {
      attr_edge += "<li><span style='color:red; margin-right: 20px;'>"+k+":</span><span>"+v+"</span></li>"
    });
   }
  $("#show_node_attrs").html(attr_node);
  $("#show_edge_attrs").html(attr_edge);
  $("#show_rel_node").html("<p>"+ e.data.node.relation +"</p>");
  $("#node_edge_attr").show();
});


s.bind('clickNode', function(e) { 

  // console.log(e.data.node.id)
  $.ajax({
    type: "GET",
    url: "/users/"+ e.data.node.id +"/show_other_node?node_ids="+node_ids
      
  }).done(function(data) {
    // graph_data = JSON.parse("<%#= raw [data.to_json][0] %>")
   
    data[0].nodes.forEach(function(n){
      s.graph.addNode(n)
    });

    data[0].edges.forEach(function(e){
      s.graph.addEdge(e)
    });

    data[1].forEach(function(d){
      if ($.inArray(d, node_ids) == -1)
      {
        node_ids.push(d)
      }
      
    });
  s.refresh();

});
  s.refresh();

});
</script>